#!/bin/bash
set -e

DB_SCRIPTS_DIR=$(cd "$(dirname "${BASH_SOURCE[0]}")" && cd "postgres/in-container" && pwd)
PROJECT_DIR=$(cd "$(dirname "${BASH_SOURCE[0]}")" && cd "../" && pwd)
pushd "${PROJECT_DIR}"

# Required environment variables in .env:
# RAILS_ENV: production
# POSTGRES_PASSWORD: should be randomly generated per instance
source .env
DB_USER_NAME=cobra
DB_NAME=cobra

docker compose up -d db
docker compose build app
docker compose exec -T db bash < "${DB_SCRIPTS_DIR}/wait-for-postgres.sh"

COBRA_USER_FOUND=$(docker compose exec db psql --username=postgres \
  -c "SELECT rolname FROM pg_catalog.pg_roles WHERE lower(rolname) = lower('$DB_USER_NAME');" --csv \
  | grep -c "$DB_USER_NAME")
if [ "$COBRA_USER_FOUND" -ne 1 ]; then
  docker compose exec db psql --username=postgres -c "create user cobra with password '$POSTGRES_PASSWORD' CREATEDB;"
fi

COBRA_DB_FOUND=$(docker compose exec db psql --username=postgres \
  -c "SELECT datname FROM pg_catalog.pg_database WHERE lower(datname) = lower('$DB_NAME');" --csv \
  | grep -c "$DB_NAME")
if [ "$COBRA_DB_FOUND" -ne 1 ]; then
  docker compose run --rm app rake db:create db:schema:load --trace
else
  docker compose run --rm app rake db:migrate --trace
fi

docker compose run --rm app rake ids:update assets:precompile --trace
docker compose up -d

popd
