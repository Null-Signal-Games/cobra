.col-12.players
  p
    = link_to meeting_tournament_players_path(@tournament), class: 'btn btn-primary' do
      => fa_icon 'list'
      | Player meeting

  .alert.alert-secondary.mt-4
    h5.mb-3 Register New Player
    = simple_form_for :player, url: tournament_players_path(@tournament), html: { class: 'form-inline d-block' } do |f|
      = render 'form', f: f, organiser_view: true, new_registration: true
      .mt-2.text-right
        = button_tag type: :submit, class: 'btn btn-success' do
          => fa_icon 'plus'
          | Create

  h3.mt-4
    | Players
    - if @tournament.self_registration?
      span.dropdown
        button.btn.btn-sm.dropdown-toggle.btn-light.text-muted.font-weight-bold.ml-3 data-toggle='dropdown'
          | Registration: #{@tournament.registration_lock_description}
        .dropdown-menu
          => link_to lock_player_registrations_tournament_path(@tournament), method: :patch,
                  class: ['dropdown-item', *('disabled' unless @tournament.any_player_unlocked?)] do
            => fa_icon 'lock', style: 'width: 16px'
            | Lock all players, prevent editing
          => link_to unlock_player_registrations_tournament_path(@tournament), method: :patch,
                  class: ['dropdown-item', *('disabled' if @tournament.all_players_unlocked?)] do
            => fa_icon 'unlock', style: 'width: 16px'
            | Unlock all players, allow editing
          .dropdown-divider
          => link_to close_registration_tournament_path(@tournament), method: :patch,
                  class: ['dropdown-item', *('disabled' if @tournament.registration_closed?)] do
            => fa_icon 'lock', style: 'width: 16px'
            | Close registration, prevent new players
          => link_to open_registration_tournament_path(@tournament), method: :patch,
                  class: ['dropdown-item', *('disabled' unless @tournament.registration_closed?)] do
            => fa_icon 'unlock', style: 'width: 16px'
            | Open registration, allow new players
    - if @tournament.nrdb_deck_registration?
      - if Flipper.enabled? :open_list_cut
        span.dropdown
          button.btn.btn-sm.dropdown-toggle.btn-light.text-muted.font-weight-bold.ml-2 data-toggle='dropdown'
            | Decks: #{@tournament.decks_visibility_description}
          .dropdown-menu
            => link_to tournament_path(@tournament, {tournament: {cut_deck_visibility: :cut_decks_private}}), method: :patch,
                    class: ['dropdown-item', *('disabled' unless @tournament.public_list_cut? || @tournament.open_list_cut?)] do
              => fa_icon 'lock'
              | Make all decks private
            => link_to tournament_path(@tournament, {tournament: {cut_deck_visibility: :cut_decks_open}}), method: :patch,
                    class: ['dropdown-item', *('disabled' if @tournament.open_list_cut?)] do
              => fa_icon 'lock'
              | Make decks in cut open, visible to participants
            => link_to tournament_path(@tournament, {tournament: {cut_deck_visibility: :cut_decks_public}}), method: :patch,
                    class: ['dropdown-item', *('disabled' if @tournament.public_list_cut?)] do
              => fa_icon 'lock'
              | Make decks in cut public, visible to anyone
      input#download_decks_tournament type='hidden' value='#{@tournament.name}'
      input#download_decks_path type='hidden' value='#{download_decks_tournament_players_path(@tournament)}'
      a.btn.btn-link.text-info#download_decks_button href='#'
        .spinner-border.spinner-border-sm.d-none#download_decks_spinner style='width: 15px'
        => fa_icon 'download', id: 'download_decks_icon'
        | Download decks spreadsheet
  ul.list-group.list-group-flush
  - @players.each do |player|
    li.list-group-item
      = simple_form_for player, url: tournament_player_path(@tournament, player), html: { class: 'form-inline mt-2 d-block' } do |f|
        = render 'form', f: f, organiser_view: true, player: player
        .text-right
          - if @tournament.self_registration?
            - if player.registration_locked?
              =< link_to unlock_registration_tournament_player_path(@tournament, player), method: :patch, class: 'btn btn-link text-info mr-2' do
                => fa_icon 'unlock'
                | Unlock registration
            - else
              =< link_to lock_registration_tournament_player_path(@tournament, player), method: :patch, class: 'btn btn-link text-info mr-2' do
                => fa_icon 'lock'
                | Lock registration
          - if @tournament.nrdb_deck_registration?
            =< link_to registration_tournament_player_path(@tournament, player), class: 'btn btn-link text-info mr-2' do
              => fa_icon 'eye'
              | View decks
          = button_tag type: :submit, class: 'btn btn-link text-success mr-2' do
            => fa_icon 'floppy-o'
            | Save
          =< link_to drop_tournament_player_path(@tournament, player), method: :patch, class: 'btn btn-link text-warning mr-2' do
            => fa_icon 'arrow-down'
            | Drop
          =< link_to tournament_player_path(@tournament, player), method: :delete, class: 'btn btn-link text-danger mr-2' do
            => fa_icon 'trash'
            | Delete

  - if @dropped.any?
    h3.mt-4 Dropped Players
    - @dropped.each do |player|
      p
        | #{player.name} (#{player.corp_identity}, #{player.runner_identity})
        =< link_to reinstate_tournament_player_path(@tournament, player), method: :patch, class: 'btn btn-warning' do
          => fa_icon 'arrow-up'
          | Reinstate
