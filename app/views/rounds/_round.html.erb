<% if round.stage.players.count < 100 || round.current? || policy(round.tournament).edit?
cache_unless user_signed_in?, [round, @tournament.stages.last] do
 %><div class="card">
<div class="card-header" role="tab">
<div class="row">
<div class="col-sm-9">
<a data-toggle="collapse" href="#round<%= ::Temple::Utils.escape_html((round.id)) %>">
<h5 class="mb-0">Round <%= ::Temple::Utils.escape_html((round.number)) %></h5>
</a></div><div class="col-sm-3">
<%= ::Temple::Utils.escape_html((round.pairings.reported.count)) %> / <%= ::Temple::Utils.escape_html((round.pairings.count)) %> pairings reported

</div></div></div><div<% _temple_html_attributeremover1 = ''; _temple_html_attributemerger1 = []; _temple_html_attributemerger1[0] = "collapse"; _temple_html_attributemerger1[1] = ''; _slim_codeattributes1 = ("show" if (@tournament.stages.last.rounds.last && round.id == @tournament.stages.last.rounds.last.id)); if Array === _slim_codeattributes1; _slim_codeattributes1 = _slim_codeattributes1.flatten; _slim_codeattributes1.map!(&:to_s); _slim_codeattributes1.reject!(&:empty?); _temple_html_attributemerger1[1] << ((::Temple::Utils.escape_html((_slim_codeattributes1.join(" ")))).to_s); else; _temple_html_attributemerger1[1] << ((::Temple::Utils.escape_html((_slim_codeattributes1))).to_s); end; _temple_html_attributemerger1[1]; _temple_html_attributeremover1 << ((_temple_html_attributemerger1.reject(&:empty?).join(" ")).to_s); _temple_html_attributeremover1 %><% if !_temple_html_attributeremover1.empty? %> class="<%= _temple_html_attributeremover1 %>"<% end %> id="round<%= ::Temple::Utils.escape_html((round.id)) %>">
<div class="col-12 my-3">
<% if policy(round.tournament).edit?
_slim_controls1 = link_to tournament_round_path(round.tournament, round), class: 'btn btn-warning' do %><% _slim_controls2 = ''; 
; _slim_controls2 << ((::Temple::Utils.escape_html((fa_icon 'pencil'))).to_s); 
; _slim_controls2 << (" ".freeze); _slim_controls2 << ("Edit".freeze); 
; _slim_controls2 %><% end %><%= ::Temple::Utils.escape_html((_slim_controls1)) %><% unless round.completed?
 %> <% _slim_controls3 = link_to complete_tournament_round_path(round.tournament, round, completed: true), method: :patch, class: 'btn btn-warning' do %><% _slim_controls4 = ''; 
; _slim_controls4 << ((::Temple::Utils.escape_html((fa_icon 'check'))).to_s); 
; _slim_controls4 << (" ".freeze); _slim_controls4 << ("Complete".freeze); 
; _slim_controls4 %><% end %><%= ::Temple::Utils.escape_html((_slim_controls3)) %><% end %> <% _slim_controls5 = link_to match_slips_tournament_round_pairings_path(round.tournament, round), class: 'btn btn-primary' do %><% _slim_controls6 = ''; 
; _slim_controls6 << ((::Temple::Utils.escape_html((fa_icon 'flag-checkered'))).to_s); 
; _slim_controls6 << (" ".freeze); _slim_controls6 << ("Match slips".freeze); 
; _slim_controls6 %><% end %><%= ::Temple::Utils.escape_html((_slim_controls5)) %><% end %> <% _slim_controls7 = link_to tournament_round_pairings_path(round.tournament, round), class: 'btn btn-primary' do %><% _slim_controls8 = ''; 
; _slim_controls8 << ((::Temple::Utils.escape_html((fa_icon 'list-ul'))).to_s); 
; _slim_controls8 << (" ".freeze); _slim_controls8 << ("Pairings by name".freeze); 
; _slim_controls8 %><% end %><%= ::Temple::Utils.escape_html((_slim_controls7)) %><%= ::Temple::Utils.escape_html((render 'round_timer_form', round: round)) %>
<%= ::Temple::Utils.escape_html((render 'pairings', round: round)) %>
</div></div></div><% end; end %>
