.form-group
  = f.input :name, input_html: { class: 'form-control' }, label: 'Tournament name'

.row
  .col-md-6
    .form-group
      = f.input :date, html5: true, input_html: { class: 'form-control' }
  .col-md-6
    .form-group
      = f.input :time_zone, input_html: { class: 'form-control' }

.row
  .col-md-6
    .form-group
      = f.input :registration_starts, as: :time, html5: true, input_html: { class: 'form-control' }
  .col-md-6
    .form-group
      = f.input :tournament_starts, as: :time, html5: true, input_html: { class: 'form-control' }


- if Flipper.enabled?(:single_sided_swiss, current_user)
  .form-group
    = f.input :swiss_format, collection: Tournament.swiss_formats.keys, input_html: { class: 'form-control' }, include_blank: false, label_method: ->(val) { val.capitalize.tr('_', '-') }

.row
  .col-md-6
    .form-group
      = f.input :tournament_type_id, collection: TournamentType.all, label: "Tournament Type", input_html: { class: 'form-control' }, include_blank: true, label_method: ->(val) { val.name }
  .col-md-6
    .form-group
      = f.input :card_set_id, collection: CardSet.order(date_release: :desc), label: "Legal Cardpool Up To", input_html: { class: 'form-control' }, include_blank: true, label_method: ->(val) { val.name }

.row
  .col-md-6
    .form-group
      = f.input :format_id, collection: Format.order(name: :asc), label: "Play Format", input_html: { class: 'form-control' }, include_blank: true, label_method: ->(val) { val.name }
  .col-md-6
    .form-group
      = f.input :deckbuilding_restriction_id, collection: DeckbuildingRestriction.order(date_start: :desc), label: "Deckbuilding Restriction", input_html: { class: 'form-control' }, include_blank: true, label_method: ->(val) { val.name }

.form-group
  = f.input :decklist_required, as: :boolean, inline_label: 'Decklist required for event'

.form-group
  = f.input :organizer_contact, input_html: { class: 'form-control' }, label: 'Organizer Contact Information'
.form-group
  = f.input :event_link, input_html: { class: 'form-control' }, label: 'External Event Link'
.form-group
  = f.input :description, input_html: { class: 'form-control' }, label: 'Event Description (Markdown format supported)'

.form-group
  = f.input :official_prize_kit_id, collection: OfficialPrizeKit.order(position: :desc), label: "Official Prize Kit", input_html: { class: 'form-control' }, include_blank: true, label_method: ->(val) { val.name }

.form-group
  = f.input :additional_prizes_description, input_html: { class: 'form-control' }, label: 'Additional Prize Information (Markdown format supported)'

.form-group
  = f.input :stream_url, input_html: { class: 'form-control' }, label: 'Stream URL'
.form-group
  = f.input :self_registration, as: :boolean, inline_label: 'Self-Registration: Allow players to use a link to register themselves'
- if Flipper.enabled? :nrdb_deck_registration
  .form-group
    = f.input :nrdb_deck_registration, as: :boolean, inline_label: 'Deck registration: Upload decks from NetrunnerDB'
- if Flipper.enabled? :allow_self_reporting
  .form-group
    = f.input :allow_self_reporting, as: :boolean, inline_label: 'Allow logged-in players to report their own match results'
.form-group
  = f.input :private, as: :boolean, inline_label: 'Private: Only I will be able to view this tournament'
.form-group
  = f.input :manual_seed, as: :boolean, inline_label: 'Use manual seeding for tiebreakers: Players can be assigned a "seed" value that will be used before all other tiebreakers (in ascending order; i.e. Seed 1 wins all ties)'
- if Flipper.enabled? :streaming_opt_out
  .form-group
    = f.input :allow_streaming_opt_out, as: :boolean, inline_label: 'Streaming opt out: Allow players to choose whether their games should be included in video coverage (defaults to yes, and players are notified that in a top cut it may not be possible to exclude them)'
