- if @tournament.rounds.any? || policy(@tournament).edit?
  .row
      .col-md-6
        table.table
          thead
            tr
              th Corp Factions
          tbody
            tr
              td
                div id="corp_faction_chart"
      .col-md-6
        table.table
          thead
            tr
              th Runner Factions
          tbody
            tr
              td
                div id="runner_faction_chart"

  .row.mt-3.dontprint
    .col-md-6
      table.table
        thead
          tr
            th Corp
            th Players
        tbody
          - @tournament.corp_counts.each do |id, count, total|
            tr
              td= render id
              td= "#{count} (#{"%0.1f" % (count / total.to_f * 100)}%)"
    .col-md-6
      table.table
        thead
          tr
            th Runner
            th Players
        tbody
          - @tournament.runner_counts.each do |id, count, total|
            tr
              td= render id
              td= "#{count} (#{"%0.1f" % (count / total.to_f * 100)}%)"
  javascript:
    const factionColors = new Map([
      ['anarch', 'orangered'],
      ['criminal', 'royalblue'],
      ['shaper', 'limegreen'],
      ['adam', 'olive'],
      ['apex', '#C25048'],
      ['sunny-lebeau', '#886E8F'],
      ['haas-bioroid', 'blueviolet'],
      ['jinteki', 'crimson'],
      ['neutral-corp', 'lightgrey'],
      ['neutral-runner', 'lightgrey'],
      ['nbn', 'darkorange'],
      ['weyland-consortium', 'darkgreen'],
      ['unspecified', 'charcoal'],
    ]);
    function drawPieChart(element, series, labels, colors=null) {
      const options = {
        chart: {
          offsetY: 20,
          animations: {
            enabled: false
          },
          selection: {
            enabled: false,
          },
          height: '300px',
          type: 'pie',
          fontFamily: '-apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", "Liberation Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji"',
        },
        plotOptions: {
          pie: {
            expandOnClick: false,
            dataLabels: {
                offset: -10,
            },
          },
        },
        tooltip: {
          enabled: false,
        },
        series: series,
        labels: labels,
        colors: colors,
      }
      var chart = new ApexCharts(document.querySelector(element), options);
      chart.render();
    }

    // Strip dashes and capitalize first letter of each word for display.
    function displayFaction(faction) {
      return faction.split('-').map(word => word.charAt(0).toUpperCase() + word.slice(1)).join(' ');
    }

    fetch('/tournaments/#{@tournament.id}/id_and_faction_data')
      .then(response => response.json())
      .then(data => {
        let corpFactionSeries = [];
        let corpFactionLabels = [];
        let corpFactionColors = [];
        for (faction in data.corp.factions) {
          corpFactionSeries.push(data.corp.factions[faction]);
          corpFactionLabels.push(displayFaction(faction));
          corpFactionColors.push(factionColors.get(faction));
        }
        drawPieChart("#corp_faction_chart", corpFactionSeries, corpFactionLabels, corpFactionColors);

        let runnerFactionSeries = [];
        let runnerFactionLabels = [];
        let runnerFactionColors = [];
        for (faction in data.runner.factions) {
          runnerFactionSeries.push(data.runner.factions[faction]);
          runnerFactionLabels.push(displayFaction(faction));
          runnerFactionColors.push(factionColors.get(faction));
        }
        drawPieChart("#runner_faction_chart", runnerFactionSeries, runnerFactionLabels, runnerFactionColors);
      })
      .catch(error => console.error('Error:', error));